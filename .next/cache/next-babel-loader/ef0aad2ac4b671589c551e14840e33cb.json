{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/batista/Desktop/Boostrap Nextts App/components/ListTask/listTask.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useContext } from \"react\";\nimport { todoContext } from \"../todoContext\";\nimport { ListStyle, Task } from \"./liststyle\";\nexport default function ListTask() {\n  _s();\n\n  var _this = this;\n\n  var _useContext = useContext(todoContext),\n      todos = _useContext[0],\n      setToDo = _useContext[1];\n\n  var MarkAsDone = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(index) {\n      var oldToDo;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              oldToDo = todos;\n              _context.next = 3;\n              return _objectSpread(_objectSpread({}, oldToDo[index]), {}, {\n                isDone: !oldToDo[index].isDone\n              });\n\n            case 3:\n              oldToDo[index] = _context.sent;\n              setToDo(oldToDo);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function MarkAsDone(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(ListStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, todos.map(function (value, key) {\n    return __jsx(Task, {\n      key: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, value.task, \" \", __jsx(\"span\", {\n      onClick: function onClick() {\n        return MarkAsDone(key);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, value.isDone ? \"done\" : \"pending...\"));\n  }));\n}\n\n_s(ListTask, \"LrTUKvMpIYEDQuyDilClMTmgdXw=\");\n\n_c = ListTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTask\");","map":{"version":3,"sources":["/home/batista/Desktop/Boostrap Nextts App/components/ListTask/listTask.jsx"],"names":["useContext","todoContext","ListStyle","Task","ListTask","todos","setToDo","MarkAsDone","index","oldToDo","isDone","map","value","key","task"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,aAAhC;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AAAA,oBACRJ,UAAU,CAACC,WAAD,CADF;AAAA,MAC1BI,KAD0B;AAAA,MACnBC,OADmB;;AAGjC,MAAMC,UAAU;AAAA,wEAAG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,cAAAA,OADW,GACDJ,KADC;AAAA;AAAA,qDAGZI,OAAO,CAACD,KAAD,CAHK;AAIfE,gBAAAA,MAAM,EAAE,CAACD,OAAO,CAACD,KAAD,CAAP,CAAeE;AAJT;;AAAA;AAEjBD,cAAAA,OAAO,CAACD,KAAD,CAFU;AAOjBF,cAAAA,OAAO,CAACG,OAAD,CAAP;;AAPiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVF,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAUA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACM,GAAN,CAAU,UAACC,KAAD,EAAQC,GAAR;AAAA,WACT,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KAAK,CAACE,IADT,EACe,GADf,EAEE;AAAM,MAAA,OAAO,EAAE;AAAA,eAAMP,UAAU,CAACM,GAAD,CAAhB;AAAA,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KAAK,CAACF,MAAN,GAAe,MAAf,GAAwB,YAD3B,CAFF,CADS;AAAA,GAAV,CADH,CADF;AAYD;;GAzBuBN,Q;;KAAAA,Q","sourcesContent":["import { useContext } from \"react\";\nimport { todoContext } from \"../todoContext\";\nimport { ListStyle, Task } from \"./liststyle\";\n\nexport default function ListTask() {\n  const [todos, setToDo] = useContext(todoContext);\n\n  const MarkAsDone = async (index) => {\n    const oldToDo = todos;\n    oldToDo[index] = await {\n      ...oldToDo[index],\n      isDone: !oldToDo[index].isDone,\n    };\n\n    setToDo(oldToDo);\n  };\n\n  return (\n    <ListStyle>\n      {todos.map((value, key) => (\n        <Task key={key}>\n          {value.task}{\" \"}\n          <span onClick={() => MarkAsDone(key)}>\n            {value.isDone ? \"done\" : \"pending...\"}\n          </span>\n        </Task>\n      ))}\n    </ListStyle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}