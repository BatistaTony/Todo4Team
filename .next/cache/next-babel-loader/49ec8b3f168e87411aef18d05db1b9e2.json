{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/home/batista/Desktop/Boostrap Nextts App/components/input/input.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useState } from \"react\";\nimport { todoContext } from \"../todoContext\";\nimport { InputStyle } from \"./inputStyle\";\nexport default function Input() {\n  _s();\n\n  var _useContext = useContext(todoContext),\n      todos = _useContext[0],\n      setToDo = _useContext[1];\n\n  var _useState = useState(\"\"),\n      task = _useState[0],\n      setTask = _useState[1];\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n\n    if (task && !checkIfExist(task)) {\n      setToDo([{\n        task: task,\n        isDone: false\n      }].concat(_toConsumableArray(todos)));\n      setTask(\"\");\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    setTask(event.target.value);\n  };\n\n  var checkIfExist = function checkIfExist(task) {\n    var tasks = todos.filter(function (taskToDo, key) {\n      return taskToDo === task;\n    });\n    console.log(tasks);\n\n    if (tasks.length) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return __jsx(InputStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    onChange: handleChange,\n    value: task,\n    name: \"task\",\n    id: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"+\"));\n}\n\n_s(Input, \"VQzODQKvLEDxuYSruNhEDVWewaY=\");\n\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/home/batista/Desktop/Boostrap Nextts App/components/input/input.tsx"],"names":["useContext","useState","todoContext","InputStyle","Input","todos","setToDo","task","setTask","handleSubmit","event","preventDefault","checkIfExist","isDone","handleChange","target","value","tasks","filter","taskToDo","key","console","log","length"],"mappings":";;;;;;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAAA,oBACLJ,UAAU,CAACE,WAAD,CADL;AAAA,MACvBG,KADuB;AAAA,MAChBC,OADgB;;AAAA,kBAENL,QAAQ,CAAC,EAAD,CAFF;AAAA,MAEvBM,IAFuB;AAAA,MAEjBC,OAFiB;;AAI9B,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAgB;AACnCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIJ,IAAI,IAAI,CAACK,YAAY,CAACL,IAAD,CAAzB,EAAiC;AAC/BD,MAAAA,OAAO,EAAE;AAAEC,QAAAA,IAAI,EAAJA,IAAF;AAAQM,QAAAA,MAAM,EAAE;AAAhB,OAAF,4BAA8BR,KAA9B,GAAP;AACAG,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GAND;;AAQA,MAAMM,YAAY,GAAG,SAAfA,YAAe,CAACJ,KAAD,EAAgB;AACnCF,IAAAA,OAAO,CAACE,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAP;AACD,GAFD;;AAIA,MAAMJ,YAAY,GAAG,SAAfA,YAAe,CAACL,IAAD,EAAU;AAC7B,QAAMU,KAAK,GAAGZ,KAAK,CAACa,MAAN,CAAa,UAACC,QAAD,EAAWC,GAAX,EAAmB;AAC5C,aAAOD,QAAQ,KAAKZ,IAApB;AACD,KAFa,CAAd;AAIAc,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;;AAEA,QAAIA,KAAK,CAACM,MAAV,EAAkB;AAChB,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACF,GAZD;;AAcA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,QAAQ,EAAET,YAFZ;AAGE,IAAA,KAAK,EAAEP,IAHT;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,EAAE,EAAC,EALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AAAQ,IAAA,OAAO,EAAEE,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARF,CADF;AAYD;;GA1CuBL,K;;KAAAA,K","sourcesContent":["import { useContext, useState } from \"react\";\nimport { todoContext } from \"../todoContext\";\nimport { InputStyle } from \"./inputStyle\";\n\nexport default function Input() {\n  const [todos, setToDo] = useContext(todoContext);\n  const [task, setTask] = useState(\"\");\n\n  const handleSubmit = (event: any) => {\n    event.preventDefault();\n    if (task && !checkIfExist(task)) {\n      setToDo([{ task, isDone: false }, ...todos]);\n      setTask(\"\");\n    }\n  };\n\n  const handleChange = (event: any) => {\n    setTask(event.target.value);\n  };\n\n  const checkIfExist = (task) => {\n    const tasks = todos.filter((taskToDo, key) => {\n      return taskToDo === task;\n    });\n\n    console.log(tasks);\n\n    if (tasks.length) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return (\n    <InputStyle>\n      <input\n        type=\"text\"\n        onChange={handleChange}\n        value={task}\n        name=\"task\"\n        id=\"\"\n      />\n      <button onClick={handleSubmit}>+</button>\n    </InputStyle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}