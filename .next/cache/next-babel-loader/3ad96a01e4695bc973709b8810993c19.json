{"ast":null,"code":"var _jsxFileName = \"/home/batista/Desktop/Boostrap Nextts App/components/ListTask/listTask.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useContext } from \"react\";\nimport { todoContext } from \"../todoContext\";\nimport { ListStyle, Task } from \"./liststyle\";\nexport default function ListTask() {\n  const {\n    0: todos,\n    1: setToDo\n  } = useContext(todoContext);\n\n  const MarkAsDone = async index => {\n    const oldToDo = [...todos];\n    oldToDo[index] = await _objectSpread(_objectSpread({}, oldToDo[index]), {}, {\n      isDone: !oldToDo[index].isDone\n    });\n    setToDo(oldToDo);\n  };\n\n  return __jsx(ListStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, todos.map((value, key) => __jsx(Task, {\n    isDone: value.isDone,\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, value.task, \" \", __jsx(\"span\", {\n    onClick: () => MarkAsDone(key),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, value.isDone ? \"done\" : \"Pending...\"))));\n}","map":{"version":3,"sources":["/home/batista/Desktop/Boostrap Nextts App/components/ListTask/listTask.jsx"],"names":["useContext","todoContext","ListStyle","Task","ListTask","todos","setToDo","MarkAsDone","index","oldToDo","isDone","map","value","key","task"],"mappings":";;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,aAAhC;AAEA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAmBN,UAAU,CAACC,WAAD,CAAnC;;AAEA,QAAMM,UAAU,GAAG,MAAOC,KAAP,IAAiB;AAClC,UAAMC,OAAO,GAAG,CAAC,GAAGJ,KAAJ,CAAhB;AAEAI,IAAAA,OAAO,CAACD,KAAD,CAAP,GAAiB,sCACZC,OAAO,CAACD,KAAD,CADK;AAEfE,MAAAA,MAAM,EAAE,CAACD,OAAO,CAACD,KAAD,CAAP,CAAeE;AAFT,MAAjB;AAKAJ,IAAAA,OAAO,CAACG,OAAD,CAAP;AACD,GATD;;AAWA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACM,GAAN,CAAU,CAACC,KAAD,EAAQC,GAAR,KACT,MAAC,IAAD;AAAM,IAAA,MAAM,EAAED,KAAK,CAACF,MAApB;AAA4B,IAAA,GAAG,EAAEG,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,IADT,EACe,GADf,EAEE;AAAM,IAAA,OAAO,EAAE,MAAMP,UAAU,CAACM,GAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACF,MAAN,GAAe,MAAf,GAAwB,YAD3B,CAFF,CADD,CADH,CADF;AAYD","sourcesContent":["import { useContext } from \"react\";\nimport { todoContext } from \"../todoContext\";\nimport { ListStyle, Task } from \"./liststyle\";\n\nexport default function ListTask() {\n  const [todos, setToDo] = useContext(todoContext);\n\n  const MarkAsDone = async (index) => {\n    const oldToDo = [...todos];\n\n    oldToDo[index] = await {\n      ...oldToDo[index],\n      isDone: !oldToDo[index].isDone,\n    };\n\n    setToDo(oldToDo);\n  };\n\n  return (\n    <ListStyle>\n      {todos.map((value, key) => (\n        <Task isDone={value.isDone} key={key}>\n          {value.task}{\" \"}\n          <span onClick={() => MarkAsDone(key)}>\n            {value.isDone ? \"done\" : \"Pending...\"}\n          </span>\n        </Task>\n      ))}\n    </ListStyle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}