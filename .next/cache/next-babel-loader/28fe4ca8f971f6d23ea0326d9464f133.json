{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/batista/Desktop/Boostrap Nextts App/components/todoContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createContext, useState } from \"react\";\nexport var todoContext = /*#__PURE__*/createContext([]);\nexport var ContextProvider = function ContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      todos = _useState[0],\n      setToDo = _useState[1];\n\n  var _useState2 = useState([\"Tony\"]),\n      members = _useState2[0],\n      setMember = _useState2[1];\n\n  return __jsx(todoContext.Provider, {\n    value: [todos, setToDo, members, setMember],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n_s(ContextProvider, \"f6Jbg2n6NqE7NhmGnzgd9PtpN1Y=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/home/batista/Desktop/Boostrap Nextts App/components/todoContext.tsx"],"names":["createContext","useState","todoContext","ContextProvider","children","todos","setToDo","members","setMember"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AAGA,OAAO,IAAMC,WAAW,gBAAGF,aAAa,CAAC,EAAD,CAAjC;AAMP,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,OAA0B;AAAA;;AAAA,MAAvBC,QAAuB,QAAvBA,QAAuB;;AAAA,kBAC9BH,QAAQ,CAAsB,EAAtB,CADsB;AAAA,MAChDI,KADgD;AAAA,MACzCC,OADyC;;AAAA,mBAE1BL,QAAQ,CAAwB,CAAC,MAAD,CAAxB,CAFkB;AAAA,MAEhDM,OAFgD;AAAA,MAEvCC,SAFuC;;AAIvD,SACE,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,CAACH,KAAD,EAAQC,OAAR,EAAiBC,OAAjB,EAA0BC,SAA1B,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QADH,CADF;AAKD,CATM;;GAAMD,e;;KAAAA,e","sourcesContent":["import { createContext, useState } from \"react\";\nimport { IMember, ITodo } from \"./types\";\n\nexport const todoContext = createContext([]);\n\ninterface IProps {\n  children: any;\n}\n\nexport const ContextProvider = ({ children }: IProps) => {\n  const [todos, setToDo] = useState<Array<ITodo> | null>([]);\n  const [members, setMember] = useState<Array<IMember> | null>([\"Tony\"]);\n\n  return (\n    <todoContext.Provider value={[todos, setToDo, members, setMember]}>\n      {children}\n    </todoContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}